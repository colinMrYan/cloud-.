apply plugin: 'com.inspur.comgradle'
apply plugin: 'com.jakewharton.butterknife'



android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.androidTools
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0.0"
        ndk {
            abiFilters "armeabi-v7a", "x86", 'arm64-v8a'
        }
        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
//        lintConfig file("lint.xml")
        abortOnError false
        checkReleaseBuilds false
        disable 'MissingTranslation', 'ExtraTranslation','TypographyFractions','TypographyQuotes'
    }


    resourcePrefix project.getName()+"_"

    //资源文件目录
    sourceSets {
        main {
            res.srcDirs =
                    [
                           'src/main/res',
                           'src/main/res/layouts/feedback',
                            'src/main/res/layouts/myinfo',
                           'src/main/res/layouts/setting',
                            'src/main/res/layouts',
                    ]
        }
    }
    def isDebug = false
    for(String s : gradle.startParameter.taskNames) {
        if (s.contains("Debug") | s.contains("debug")) {
            isDebug = true
            break
        }
    }
    if(isDebug){
        tasks.whenTaskAdded { task ->
            if (task.name.contains("lint")
                    ||task.name.contains("Aidl")//用不到测试的时候就可以先关闭
                    ||task.name.contains("mockableAndroidJar")
                    ||task.name.contains("UnitTest")
                    ||task.name.contains("AndroidTest")//用不到NDK和JNI的也关闭掉
            ) {
                task.enabled = false
            }
        }
    }
}


combuild {
    applicationName = 'com.inspur.emmcloud.setting.runalone.application.SettingApplication'
    isRegisterCompoAuto = false
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':basemodule')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation  'com.blankj:utilcode:1.25.1'
    annotationProcessor deps.ARouter.router_anno
    implementation deps.butterknife.butterknife
    annotationProcessor deps.butterknife.butterknife_compiler
    implementation deps.pagerslidingtabstrip
}
repositories {
    mavenCentral()
}

apply plugin: 'maven'
def MAVEN_LOCAL_PATH = uri("../release")
def ARTIFACT_ID = 'setting'
def VERSION_NAME = '1.0.0'
def GROUP_ID = 'com.inspur.emmcloud'
uploadArchives() {
    repositories {
        mavenDeployer {
            repository(url: uri(MAVEN_LOCAL_PATH))
            pom.groupId = GROUP_ID
            pom.artifactId = ARTIFACT_ID
            pom.version = VERSION_NAME
            pom.packaging = 'aar'
        }
    }
}