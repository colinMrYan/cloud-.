apply plugin: 'com.android.library'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.androidTools
    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters "armeabi-v7a", "x86", 'arm64-v8a'
        }
        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
//        lintConfig file("lint.xml")
        abortOnError false
        checkReleaseBuilds false
        disable 'MissingTranslation', 'ExtraTranslation','TypographyFractions','TypographyQuotes'
    }

    def isDebug = false
    for(String s : gradle.startParameter.taskNames) {
        if (s.contains("Debug") | s.contains("debug")) {
            isDebug = true
            break
        }
    }
    if(isDebug){
        tasks.whenTaskAdded { task ->
            if (task.name.contains("lint")
                    ||task.name.contains("Aidl")//用不到测试的时候就可以先关闭
                    ||task.name.contains("mockableAndroidJar")
                    ||task.name.contains("UnitTest")
                    ||task.name.contains("AndroidTest")//用不到NDK和JNI的也关闭掉
            ) {
                task.enabled = false
            }
        }
    }
}

dependencies {
    api project(':baselib')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
