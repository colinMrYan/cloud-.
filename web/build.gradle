buildscript {
    repositories {
        maven {
            url uri('../release')
        }
    }
    dependencies {
        classpath 'com.inspur:comgradle:1.0'
    }
}
apply plugin: 'com.inspur.comgradle'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.androidTools
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
//        lintConfig file("lint.xml")
        abortOnError false
        checkReleaseBuilds false
//        disable 'MissingTranslation', 'ExtraTranslation'
    }

    resourcePrefix project.getName()+"_"
}

combuild {
    applicationName = 'com.inspur.emmcloud.web.runalone.application.WebApplication'
    isRegisterCompoAuto = false
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':basemodule')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation deps.baiduMapLocation
    implementation deps.zxing
    annotationProcessor deps.ARouter.router_anno
    implementation deps.butterknife.butterknife
    annotationProcessor deps.butterknife.butterknife_compiler
    implementation deps.scancode.mobilesdk
    implementation deps.scancode.fakeframework
    implementation deps.scancode.mascanengine_api
    implementation deps.scancode.bqcscanservice_api
}
