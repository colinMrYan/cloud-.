apply plugin: 'com.android.application'


import com.android.build.OutputFile

apply from: "../node_modules/react-native/react.gradle"
apply from: "../node_modules/react-native-vector-icons/fonts.gradle"

/**
 * Set this to true to create two separate APKs instead of one:
 *   - An APK that only works on ARM devices
 *   - An APK that only works on x86 devices
 * The advantage is the size of the APK is reduced by about 4MB.
 * Upload all the APKs to the Play Store and people will download
 * the correct one based on the CPU architecture of their device.
 */
def enableSeparateBuildPerCPUArchitecture = false

/**
 * Run Proguard to shrink the Java bytecode in release builds.
 */
def enableProguardInReleaseBuilds = false
Properties properties = new Properties()
properties.load(new FileInputStream(SIGN_PROPERTIES))

android {
    signingConfigs {
        config {
            keyAlias properties.getProperty("KEY_ALIAS")
            keyPassword properties.getProperty("KEY_PASSWORD")
            storeFile file(properties.getProperty("KEY_STORE_FILE_PATH"))
            storePassword properties.getProperty("KEY_PASSWORD")
        }
    }
    compileSdkVersion 24
    buildToolsVersion "26.0.2"
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    defaultConfig {
        applicationId "com.inspur.emmcloud"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 52
        versionName "1.9.10"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        multiDexEnabled true
    }
    sourceSets.main {
        jniLibs.srcDirs = ['libs']
    }
    buildTypes {
        release {
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.config
        }
    }
    configurations.all {
        // React Native依赖的findbugs版本更高
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.0',
                'com.squareup.okhttp3:okhttp:3.4.1'
    }
    lintOptions {
        lintConfig file("lint.xml")
        abortOnError false
        checkReleaseBuilds false
        disable 'MissingTranslation', 'ExtraTranslation'
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.all { output ->
                def outputFile = output.outputFile
                def fileName
                if (variant.buildType.name.equals('release')) {
                    fileName = "inspur_cloud_mobileclient_${defaultConfig.versionName}.apk"
                } else if (variant.buildType.name.equals('debug')) {
                    fileName = "inspur_cloud_mobileclient_debug_1.0.0.apk"
                }
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    outputFileName = fileName
                }
            }
        }
    }

    //资源文件目录
    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res/layouts/app/groupnews',//新闻
                            'src/main/res/layouts/app/volume',//网盘
                            'src/main/res/layouts/app',//应用中心，应用详情，React应用等布局
                            'src/main/res/layouts/chat',//沟通
                            'src/main/res/layouts/chat/cards',//沟通卡片
                            'src/main/res/layouts/contact',//通讯录
                            'src/main/res/layouts/find/trip',//差旅
                            'src/main/res/layouts/find',//发现里的其他内容
                            'src/main/res/layouts/cards',//卡片
                            'src/main/res/layouts/login',//登录
                            'src/main/res/layouts/mdm',//mdm设备管理
                            'src/main/res/layouts/mine/feedback',//用户反馈
                            'src/main/res/layouts/mine/myinfo',//我的信息
                            'src/main/res/layouts/mine/setting',//设置
                            'src/main/res/layouts/mine',//其他设置内容
                            'src/main/res/layouts/work/approval',//待办任务
                            'src/main/res/layouts/work/calendar',//日历
                            'src/main/res/layouts/work/meeting',//会议
                            'src/main/res/layouts/work/task',//任务
                            'src/main/res/layouts/work',//其他工作相关布局
                            'src/main/res/layouts/notsupport',//不支持此功能页面
                            'src/main/res/layouts/imp',//imp插件
                            'src/main/res/layouts/widgets/popwindow',//popwindow
                            'src/main/res/layouts/widgets/dialog',//dialog
                            'src/main/res/layouts/widgets',//dialog
                            'src/main/res/layouts/others/fragments',//fragments
                            'src/main/res/layouts/others',//fragments
                            'src/main/res/layouts/umeng',//umeng
                            'src/main/res/layouts/jpush',//jpush
                            'src/main/res/layout',//默认布局文件目录
                            'src/main/res'//根目录

                    ]
        }
    }
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86"
        }
    }
    // applicationVariants are e.g. debug, release
    //android studio对于jni调用及运行闪退无法加载库的问题解决方案
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // For each separate APK per architecture, set a unique version code as described here:
            // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
            def versionCodes = ["armeabi-v7a": 1, "x86": 2]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }
}



dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile 'com.android.support:design:24.2.0'
    compile 'com.facebook.react:react-native:+'
    compile 'org.apache.commons:commons-lang3:3.5'
    compile 'com.amap.api:location:3.8.0'
    compile 'com.baidu.mapapi:location:6.13'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.alibaba:fastjson:1.2.24'
    compile 'io.socket:engine.io-client:0.6.1'
    compile 'io.socket:socket.io-client:0.6.1'
    compile 'com.belerweb:pinyin4j:2.5.1'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    compile 'com.google.zxing:core:3.3.0'
    compile('com.github.chrisbanes:PhotoView:1.3.1') {
        exclude module: 'support-compat'
        exclude module: 'support-core-utils'
    }
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'javax.annotation:javax.annotation-api:1.2'
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    compile 'uk.co.chrisjenx:calligraphy:2.2.0'
    compile 'com.fashare2015:HoverView:1.0.1'
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.2.7'
    compile 'com.zhy:magic-viewpager:1.0.1'
    compile 'org.jsoup:jsoup:1.9.2'
    compile 'com.zzhoujay.markdown:markdown:1.0.5'
    compile 'com.jakewharton:disklrucache:2.0.2'
    //Markdown引入 缓存
    compile 'com.android.support:multidex:1.0.2'
    compile 'com.wei.android.lib:fingerprintidentify:1.2.1'
    //指纹识别库暂未启用
    compile 'me.leolin:ShortcutBadger:1.1.19@aar'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    // React Naive Components
    compile project(':react-native-smart-swipe-refresh-layout')
    compile project(':react-native-picker')
    compile project(':react-native-svg')
    compile project(':react-native-vector-icons')
    compile project(':react-native-navigation')
    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test:runner:0.5') {
        exclude module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:rules:0.5') {
        exclude module: 'support-annotations'
    }
    compile(name: 'xutils-3.5.0', ext: 'aar')
    compile(name: 'qmui-1.0.4', ext: 'aar')
    compile 'commons-codec:commons-codec:20041127.091804'
    compile files('libs/jpush-android-3.1.1.jar')
    compile files('libs/jcore-android-1.1.9.jar')
    compile files('libs/HMSSdkBase_2.5.3.302.jar')
    compile files('libs/HMSSdkPush_2.5.3.302.jar')
    compile files('libs/SocialSDK_QQ_Simplify.jar')
    compile files('libs/SocialSDK_WeChat_Simplify.jar')
    compile files('libs/umeng_shareboard_widget.jar')
    compile files('libs/umeng_social_api.jar')
    compile files('libs/umeng_social_net.jar')
    compile files('libs/umeng_social_shareboard.jar')
    compile files('libs/umeng_social_shareview.jar')
    compile files('libs/umeng_social_tool.jar')
    compile files('libs/SocialSDK_sms.jar')
    compile files('libs/aliyun-oss-sdk-android-2.0.1.1.jar')
    compile files('libs/Msc.jar')
    compile files('libs/Sunflower.jar')
}
repositories { flatDir { dirs 'aars' } }
