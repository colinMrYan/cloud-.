apply plugin: 'com.android.application'


import com.android.build.OutputFile

apply from: "../node_modules/react-native/react.gradle"

/**
 * Set this to true to create two separate APKs instead of one:
 *   - An APK that only works on ARM devices
 *   - An APK that only works on x86 devices
 * The advantage is the size of the APK is reduced by about 4MB.
 * Upload all the APKs to the Play Store and people will download
 * the correct one based on the CPU architecture of their device.
 */
def enableSeparateBuildPerCPUArchitecture = false

/**
 * Run Proguard to shrink the Java bytecode in release builds.
 */
def enableProguardInReleaseBuilds = false


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false

//    signingConfigs{
//        signingConfig{
//            keyAlias 'sign'
//            keyPassword 'inspurimp'
//            storeFile file('../apk.keystore')
//            storePassword '123456A?'
//        }
//    }
    defaultConfig {
        applicationId "com.inspur.emmcloud"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 29
        versionName "1.2.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        multiDexEnabled true
//        signingConfig signingConfigs.signingConfig
    }

    sourceSets.main{
            jniLibs.srcDirs = ['src/libs']
    }
    buildTypes {
//        debug {
//            applicationIdSuffix "debug"
//        }
        release {
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

//    productFlavors {
//        normal {
//            applicationId = "com.inspur.emmcloud.normal"
////            resValue "string", "app_name", "浪潮云+"
//        }
//        dev {
//            applicationId = "com.inspur.emmcloud.dev"
//        }
//    }
    configurations.all {
        // React Native依赖的findbugs版本更高
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.0',
                'com.squareup.okhttp3:okhttp:3.4.1'
    }
    lintOptions {
        lintConfig file("lint.xml")
        abortOnError false
        checkReleaseBuilds false
        disable 'MissingTranslation', 'ExtraTranslation'
    }

    //指定打包后应用名称
        applicationVariants.all {variant ->
        variant.outputs.each {output ->
            def outputFile = output.outputFile
            def fileName
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                if (variant.buildType.name.equals('release')) {
//                    fileName = "${defaultConfig.versionName}_${defaultConfig.versionCode}.apk"
                    fileName = "inspur_cloud_mobileclient_${defaultConfig.versionName}.apk"
                } else if (variant.buildType.name.equals('debug')) {
//                    fileName = "${defaultConfig.versionName}_${defaultConfig.versionCode}_debug.apk"
                    fileName = "inspur_cloud_mobileclient_debug_1.0.0.apk"
                }
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }


    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86"
        }
    }
    // applicationVariants are e.g. debug, release
    //android studio对于jni调用及运行闪退无法加载库的问题解决方案
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // For each separate APK per architecture, set a unique version code as described here:
            // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
            def versionCodes = ["armeabi-v7a":1, "x86":2]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }
}



dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    compile 'com.facebook.react:react-native:+'
    // From node_modules

    // 3rd parts
    compile 'org.apache.commons:commons-lang3:3.5'
    //    compile 'cn.jpush.api:jpush-client:3.2.16'
    compile 'com.amap.api:location:3.3.0'
    compile 'com.baidu.mapapi:location:6.13'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.alibaba:fastjson:1.2.24'
    compile 'io.socket:engine.io-client:0.6.1'
    compile 'io.socket:socket.io-client:0.6.1'
    compile 'com.belerweb:pinyin4j:2.5.1'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    //    compile 'org.xutils:xutils:3.3.40'
    compile 'com.google.zxing:core:3.3.0'
    compile 'com.mani:ThinDownloadManager:1.3.0'
    compile('com.github.chrisbanes:PhotoView:1.3.1') {
        exclude module: 'support-compat'
        exclude module: 'support-core-utils'
    }
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'javax.annotation:javax.annotation-api:1.2'
    compile 'org.projectlombok:lombok:1.16.6'
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    compile 'uk.co.chrisjenx:calligraphy:2.2.0'
    compile 'com.fashare2015:HoverView:1.0.1'


    // React Naive Components
    compile project(':react-native-smart-swipe-refresh-layout')
    compile project(':react-native-picker')


    testCompile 'junit:junit:4.12'


    androidTestCompile('com.android.support.test:runner:0.5') {
        exclude module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:rules:0.5') {
        exclude module: 'support-annotations'
    }

    compile files('src/libs/xutils-2.6.15_db.jar')
    compile files('src/libs/xutils-3.3.36.jar')
    compile 'commons-codec:commons-codec:20041127.091804'
    compile files('src/libs/jpush-android_v3.0.3.jar')
    compile files('src/libs/jcore-android_v1.1.1.jar')
    //compile files('src/libs/mdm.jar')
}
