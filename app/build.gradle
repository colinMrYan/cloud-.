apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

import com.android.build.OutputFile

apply from: "../node_modules/react-native/react.gradle"
apply from: "../node_modules/react-native-vector-icons/fonts.gradle"

/**
 * Set this to true to create two separate APKs instead of one:
 *   - An APK that only works on ARM devices
 *   - An APK that only works on x86 devices
 * The advantage is the size of the APK is reduced by about 4MB.
 * Upload all the APKs to the Play Store and people will download
 * the correct one based on the CPU architecture of their device.
 */
def enableSeparateBuildPerCPUArchitecture = false

/**
 * Run Proguard to shrink the Java bytecode in release builds.
 */
def enableProguardInReleaseBuilds = false
Properties properties = new Properties()
properties.load(new FileInputStream(SIGN_PROPERTIES))

android {
    signingConfigs {
        config {
            keyAlias properties.getProperty("KEY_ALIAS")
            keyPassword properties.getProperty("KEY_PASSWORD")
            storeFile file(properties.getProperty("KEY_STORE_FILE_PATH"))
            storePassword properties.getProperty("KEY_PASSWORD")
        }
    }
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.androidTools
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    defaultConfig {
        applicationId "com.inspur.emmcloud"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 82
        versionName "3.1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        multiDexEnabled true
    }
    sourceSets.main {
        jniLibs.srcDirs = ['libs']
    }
    buildTypes {
        release {
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.config
        }
    }
    lintOptions {
        lintConfig file("lint.xml")
        abortOnError false
        checkReleaseBuilds false
        disable 'MissingTranslation', 'ExtraTranslation'
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.all { output ->
                def outputFile = output.outputFile
                def fileName
                if (variant.buildType.name.equals('release')) {
                    fileName = "inspur_cloud_mobileclient_${defaultConfig.versionName}.apk"
                } else if (variant.buildType.name.equals('debug')) {
                    fileName = "inspur_cloud_mobileclient_debug_${defaultConfig.versionName}.apk"
                }
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    outputFileName = fileName
                }
            }
        }
    }

    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86"
        }
    }
    // applicationVariants are e.g. debug, release
    //android studio对于jni调用及运行闪退无法加载库的问题解决方案
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // For each separate APK per architecture, set a unique version code as described here:
            // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
            def versionCodes = ["armeabi-v7a": 1, "x86": 2]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }

    //资源文件目录
    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res/layouts/app/groupnews',//新闻
                            'src/main/res/layouts/app/volume',//网盘
                            'src/main/res/layouts/app/webex',//网盘
                            'src/main/res/layouts/app/mail',//网盘
                            'src/main/res/layouts/app',//应用中心，应用详情，React应用等布局
                            'src/main/res/layouts/chat',//沟通
                            'src/main/res/layouts/chat/cards',//沟通卡片
                            'src/main/res/layouts/contact',//通讯录
                            'src/main/res/layouts/find/trip',//差旅
                            'src/main/res/layouts/find',//发现里的其他内容
                            'src/main/res/layouts/cards',//卡片
                            'src/main/res/layouts/login',//登录
                            'src/main/res/layouts/mdm',//mdm设备管理
                            'src/main/res/layouts/mine/feedback',//用户反馈
                            'src/main/res/layouts/mine/myinfo',//我的信息
                            'src/main/res/layouts/mine/setting',//设置
                            'src/main/res/layouts/mine',//其他设置内容
                            'src/main/res/layouts/work/approval',//待办任务
                            'src/main/res/layouts/work/calendar',//日历
                            'src/main/res/layouts/work/meeting',//会议
                            'src/main/res/layouts/work/task',//任务
                            'src/main/res/layouts/work',//其他工作相关布局
                            'src/main/res/layouts/schedule',//日程
                            'src/main/res/layouts/schedule/schedule',//日程_日程
                            'src/main/res/layouts/schedule/calendar',//日程_日历
                            'src/main/res/layouts/schedule/task',//日程_任务
                            'src/main/res/layouts/schedule/meeting',//日程_任务
                            'src/main/res/layouts/notsupport',//不支持此功能页面
                            'src/main/res/layouts/imp',//imp插件
                            'src/main/res/layouts/widgets/popwindow',//popwindow
                            'src/main/res/layouts/widgets/dialog',//dialog
                            'src/main/res/layouts/widgets',//dialog
                            'src/main/res/layouts/others/fragments',//fragments
                            'src/main/res/layouts/others',//fragments
                            'src/main/res/layouts/umeng',//umeng
                            'src/main/res/layouts/jpush',//jpush
                            'src/main/res/layout',//默认布局文件目录
                            'src/main/res'//根目录

                    ]
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':componentservice')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation deps.butterknife.butterknife
    annotationProcessor deps.butterknife.butterknife_compiler
}

